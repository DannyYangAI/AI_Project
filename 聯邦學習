=============================Intel====================================================================
intel  的框架 https://github.com/intel/openfl
Intel  的框架說明文件：https://openfl.readthedocs.io/en/latest/index.html
OpenFL: An open-source framework for Federated Learning
教學影片  https://www.youtube.com/watch?v=z5jJsvvfKbM&t=2128s
inetel 聯邦文件中，完整說明運行流程(寫CODE用的):
https://openfl.readthedocs.io/en/latest/running_the_federation.html#director-workflow
https://towardsdatascience.com/go-federated-with-openfl-8bc145a5ead1
 
openfl 基本的Tutorial 操作教學：https://openfl.readthedocs.io/en/latest/source/workflow/running_the_federation.notebook.html#running-notebook
			      https://github.com/intel/openfl/blob/develop/openfl-tutorials/interactive_api/PyTorch_Kvasir_UNet/workspace/PyTorch_Kvasir_UNet.ipynb  (Federated Kvasir with Director example)

Intel發表的論文
Federated learning in medicine: facilitating multi-institutional collaborations without sharing patient data
https://www.nature.com/articles/s41598-020-69250-1	

OpenFL: An open-source framework for Federated Learning (有教學程式! 開發使用手冊)
https://arxiv.org/pdf/2105.06413.pdf
=================================================openfl  Director-Base 執行流程============================================
建立OpenFL_DirectorBased 資料夾，後續操作建立資料均於此資料夾下
anaconda 建立環境 FL_director ，python 版本選3.7
anaconda ui => python 換3.8版， tensorflow 2.9版
安裝openfl : pip install openfl
active FL_director env 開console X 5個, 分別用於director、envoy1、envoy2、envoy3、workspace 分別描述如下
(1)director console:
   cd OpenFL_DirectorBased/Tensorflow_MNIST/director
   fx director start --disable-tls -c director_config.yaml
(2)envoy1 console:
   cd OpenFL_DirectorBased/Tensorflow_MNIST/envoy
   fx envoy start -n "envoy_one" --disable-tls --envoy-config-path "envoy_config_one.yaml" -dh localhost -dp 50051
(3)envoy2 console:
   cd OpenFL_DirectorBased/Tensorflow_MNIST/envoy
   ffx envoy start -n "envoy_two" --disable-tls --envoy-config-path "envoy_config_two.yaml" -dh localhost -dp 50051
(4)envoy3 console:(yaml 要再建立)
   cd OpenFL_DirectorBased/Tensorflow_MNIST/envoy
   ffx envoy start -n "envoy_three" --disable-tls --envoy-config-path "envoy_config_three.yaml" -dh localhost -dp 50051
(5)workspace:
   cd OpenFL_DirectorBased/Tensorflow_MNIST/workspace
   選項1 jupter (要安裝)，jupyter lab Tensorflow_MNIST.ipynb
   選項2  .ipynb 轉Py, 直接執行 python  Tensorflow_MNIST.py



=====================================================================================

  fx director start --disable-tls -c director_config.yaml
 
 fx envoy start -n "envoy_one" --disable-tls --envoy-config-path "envoy_config_one.yaml" -dh localhost -dp 50051
 fx envoy start -n "envoy_two" --disable-tls --envoy-config-path "envoy_config_two.yaml" -dh localhost -dp 50051
  
  jupyter lab Tensorflow_MNIST.ipynb
  

=============聯邦學習樣板建立流程==============================
建立His_Federation 資料夾，後續操作建立資料均於此資料夾下

[Aggregator端:]
His_Federation 資料夾下建立 His_Aggregator資料夾
anaconda 建立環境 His_Aggregator ，python 版本3.7
active His_Aggregator env 開console
移到 His_Aggregator資料夾
安裝openfl :	pip install openfl


安裝樣版與下載訓練資料：                        fx workspace create --prefix ~/His_Federation/His_Aggregator --template tf_cnn_histology
移動到操作Aggregator的目錄:                    cd His_Federation/His_Aggregator
初始化Aggregator:                             fx plan initialize      (Aggregator若指定網路位置加  -a aggregator-hostname.internal-domain.com)
若下載失敗，多執行幾次：                        fx plan initialize
檢查 hostname	:                           hostname -A   ==> check
檢查憑證頒發機構資料夾(是空的)                  ls cert
建立憑證頒發機構 (Certificate authority)       fx workspace certify
檢查憑證頒發機構資料夾(有crt檔)                 ls cert
建立憑證請求文件                               fx aggregator  generate-cert-request  (Aggregator若指定網路位置加 --fqdn aggregator-hostname.internal-domain.com)
簽發憑證                                       fx aggregator  certify
建查簽發憑證是否成功                            ls cert/server
打包Aggregator工作區的檔案和環境設定            fx workspace export    ==>輸出 His_Aggregator.zip

[Collaborator端:]
以下只列出編號1的Collaborator，其他編號Collaborator操作流程一樣
His_Federation 資料夾下建立 His_Collaborator1資料夾
將His_Aggregator.zip 複制到 Federation/His_Collaborator1 資料夾下
anaconda 建立環境 His_Collaborator1 ，python 版本3.7
active His_Collaborator1 env 開console

安裝openfl :                                   pip install openfl
移動到操作His_Collaborator1的目錄:              cd ~/His_Federation/His_Collaborator1/
匯入Aggregator工作區資料與環境                  fx workspace import --archive His_Aggregator.zip
移動到操作His_Collaborator1的目錄:              cd  ~/His_Federation/His_Collaborator1/His_Aggregator/
建立Collaborator1憑證請求文件                   fx collaborator generate-cert-request -n Hospital01   
                                               ==>輸出壓縮檔 col_hospital01_to_agg_cert_request.zip

將憑證包 col_hospital01_to_agg_cert_request.zip複製到Aggregator端=>Copy to     His_Federation/His_Aggregator

[Aggregator端:]
移動到操作Aggregator的目錄:                     cd His_Federation/His_Aggregator
簽發Collaborator1 CSR憑證包：                  fx collaborator certify --request-pkg col_hospital01_to_agg_cert_request.zip  
                                              ==> 輸出壓縮檔  agg_to_col_hospital01_signed_cert.zip

將已簽發Collaborator1 CSR憑證包  agg_to_col_hospital01_signed_cert.zip  複製到Collaborator端=>Copy to     His_Federation/His_Collaborator1

[Collaborator端:]
匯入已簽發憑證和憑證串鍊(Certificate chain) :   fx collaborator certify --import agg_to_col_hospital01_signed_cert.zip

其他編號Collaborator操作流程一樣從第24行開始重複建立


==========================啟動聯邦學習========================================================

開啟Console:
conda activate His_Aggregator
cd His_Federation/His_Aggregator
fx aggregator start

開啟Console:
conda activate His_Collaborator1
cd  ~/His_Federation/His_Collaborator1/His_Aggregator/
fx collaborator start -n hospital01

開啟Console:
conda activate His_Collaborator2
cd  ~/His_Federation/His_Collaborator2/His_Aggregator/
fx collaborator start -n hospital02

開啟Console:
conda activate His_Collaborator3
cd  ~/His_Federation/His_Collaborator3/His_Aggregator/
fx collaborator start -n hospital03



======================================Intel 回覆訓練完的模型轉成可以使用的推論模型============================================

windows環境
1.於Anaconda建立新的環境
2.開terminal
3 強制安裝Python 3.8.0    conda install python==3.8.0
4 下載oepnfl branch :   https://github.com/intel/openfl/branches/active
openfl-snyk-fix-7063a34425fb1364d8804ffdf9c464ef.zip   Updated Dec 15, 2022 by psfoley


5 安裝openfl :   python setup.py install

6 pip  install tensorflow==2.7.0
7 pip install tensorflow_datasets
8 到 ~/His_Federation/His_Aggregator 輸入下面行
fx model save -i "./save/tf_cnn_histology_best.pbuf" -o tf_cnn_histology_best.h5

9 出現OK ==〉完成


======================================Intel 訓練 聯邦學習 windows 環境 (目前版本於tensorflow有相容性問題)===============================================
Aggregator Collaborator  資料夾命名稱 與Ubuntu 略有不同，自行變更
聯邦學習樣板建立流程 
建立His_Federation 資料夾，後續操作建立資料均於此資料夾下
[Aggregator端:]
His_Federation 資料夾下建立 His_Aggregator資料夾
anaconda 建立環境 His_Aggregator ，python 版本3.7
active His_Aggregator env 開console
移動到操作Aggregator的目錄:  cd D:\Project\Openfl_Training\Aggregator
conda uninstall python
conda install python==3.8.0 #3.7 openfl 有版本相容問題 
pip install openfl

fx workspace create --prefix D:\Project\Openfl_Training\Aggregator --template tf_cnn_histology
若失敗，再執行可成功

移動到操作Aggregator的目錄:                cd  D:\Project\Openfl_Training\Aggregator
初始化Aggregator:    	               fx plan initialize      (Aggregator若指定網路位置加  -a aggregator-hostname.internal-domain.com)
若下載失敗 看這個網址，打開windows 長路徑限制  https://docs.python.org/3/using/windows.html#removing-the-max-path-limitation

檢查 hostname	:			hostname  ==> check
檢查憑證頒發機構資料夾(是空的)	      dir cert
建立憑證頒發機構 (Certificate authority)   fx workspace certify
檢查憑證頒發機構資料夾(有crt檔)             dir cert
建立憑證請求文件                           fx aggregator  generate-cert-request  (Aggregator若指定網路位置加 --fqdn aggregator-hostname.internal-domain.com)
簽發憑證				      fx aggregator  certify
建查簽發憑證是否成功                 	 dir cert\server
打包Aggregator工作區的檔案和環境設定	       fx workspace export    ==>輸出 His_Aggregator.zip

[Collaborator端:]
以下只列出編號1的Collaborator，其他編號Collaborator操作流程一樣
His_Federation 資料夾下建立 His_Collaborator1資料夾
將His_Aggregator.zip 複制到 Federation/His_Collaborator1 資料夾下
anaconda 建立環境 His_Collaborator1 ，python 版本3.7
active His_Collaborator1 env 開console

安裝openfl :  				pip install openfl
移動到操作His_Collaborator1的目錄: 	   cd D:\Project\Openfl_Training\Collaborator1
匯入Aggregator工作區資料與環境             fx workspace import --archive Aggregator.zip
移動到操作His_Collaborator1的目錄: 	   cd  ~/His_Federation/His_Collaborator1/His_Aggregator/
建立Collaborator1憑證請求文件 							fx collaborator generate-cert-request -n Hospital01   ==>輸出壓縮檔 col_hospital01_to_agg_cert_request.zip

conda uninstall python
conda install python==3.8.0
pip install openfl


  Using cached absl_py-1.3.0-py3-none-any.whl (124 kB)
ERROR: Cannot install -r requirements.txt (line 35), openfl==1.4 and protobuf==3.20.3 because these package versions have conflicting dependencies.

The conflict is caused by:
    The user requested protobuf==3.20.3
    googleapis-common-protos 1.57.0 depends on protobuf!=3.20.0, !=3.20.1, !=4.21.1, !=4.21.2, !=4.21.3, !=4.21.4, !=4.21.5, <5.0.0dev and >=3.19.5
    openfl 1.4 depends on protobuf==3.19.4

To fix this you could try to:
1. loosen the range of package versions you've specified
2. remove package versions to allow pip attempt to solve the dependency conflict

ERROR: ResolutionImpossible: for help visit https://pip.pypa.io/en/latest/topics/dependency-resolution/#dealing-with-dependency-conflicts
EXCEPTION : Command '['C:\\Users\\A\\Anaconda3\\envs\\OpenFL_Collaborator2\\python.exe', '-m', 'pip', 'install', '-r', 'requirements.txt']' returned non-zero exit status 1.

上述問題 aggregator 與 Director Base 均有發生

Quick install cuda 
sudo apt install nvidia-cuda-toolkit


====anaconda-navigator 開不起來停在loadding progress...…===============
重新安裝anaconda-navigator，安裝不會造成已建立的各個環境消失，仍在
conda remove anaconda-navigator
conda install anaconda-navigator




在 Ubuntu 18.04 使用 xrdp 遠端多人多工

環境
Ubuntu 18.04 LTS

安裝 xrdp
Ubuntu18.04 中 xrdp 會需要某些不相容的軟體包 (參考：Better Fix xRDP issue on Ubuntu 18.04.2)，要先裝修正檔
$ sudo add-apt-repository ppa:martinx/xrdp-hwe-18.04
$ sudo apt-get update

再行安裝 xrdp
$ sudo apt-get install xrdp xorg

需將 xrdp 加入 ssl-cert 群組，
$ sudo adduser xrdp ssl-cert
$ sudo reboot

重新啟動
這步很重要，無法連線很可能是這步驟沒做到

遠端連線
在 Windows 開啟內建 mstsc (遠端桌面連線)，輸入 server 的 IP、username 與 password
